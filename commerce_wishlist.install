<?php

/**
 * Implements hook_schema().
 */
function commerce_wishlist_schema() {
  $schema = array();

  $schema['commerce_wishlist'] = array(
    'description' => 'The base table for commerce wishlist.',
    'fields' => array(
      'wishlist_id' => array(
        'description' => 'The primary identifier for a wishlist.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'uid' => array(
        'description' => 'User identifier.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'nid' => array(
        'description' => 'Node identifier.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => FALSE,
      ),
      'product_id' => array(
        'description' => 'Identifier for a product.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'quantity' => array(
        'type' => 'numeric',
        'size' => 'normal',
        'not null' => TRUE,
        'default' => 0,
        'precision' => 10,
        'scale' => 2,
      ),
    ),
    'primary key' => array('wishlist_id'),
    'unique keys' => array('unique' => array('uid', 'nid', 'product_id')),
    'foreign keys' => array(
      'owner' => array(
        'table' => 'users',
        'columns' => array('uid' => 'uid'),
      ),
      'product_display' => array(
        'table' => 'node',
        'columns' => array('nid' => 'nid'),
      ),
      'product' => array(
        'table' => 'commerce_product',
        'columns' => array('product_id' => 'product_id'),
      ),
    ),
  );

  return $schema;
}

/**
 * Change NID column and add a new column for quantity.
 */
function commerce_wishlist_update_7001(&$sandbox) {
  // Change NID Collumn
  db_change_field('commerce_wishlist', 'nid', 'nid', array('type' => 'int', 'not null' => FALSE));

  // New collumn qty
  db_add_field('commerce_wishlist', 'quantity', array('type' => 'numeric', 'size' => 'normal', 'not null' => TRUE, 'default' => 0, 'precision' => 10, 'scale' => 2));
}

/**
 * Add a comment for quantity columnn in the database.
 */
function commerce_wishlist_update_7002(&$sandbox) {
  db_change_field('commerce_wishlist', 'quantity', 'quantity', array('type' => 'numeric', 'description' => 'Quantity of the product in wishlist.'));
}

/**
 * Add a column for saving the timestamp of when the product has been added to
 * the wishlist.
 */
function commerce_wishlist_update_7003(&$sandbox) {
  // Add a new column.
  db_add_field('commerce_wishlist', 'added', array(
    'type' => 'int',
    'size' => 'normal',
    'not null' => TRUE,
    'default' => 0,
    'description' => 'Timestamp for when the product was added to the wishlist.',
  ));
  // For all existing records add current timestamp, to avoid errors / issues.
  db_update('commerce_wishlist')
    ->fields(array('added' => REQUEST_TIME))
    ->execute();

  // Show message for administrators.
  return t('Timestamp column added successfully to the {commerce_wishlist} table.<br>Current timestamp has been assigned to all products.');
}

/**
 * Transfer permissions for managing the wishlists.
 */
function commerce_wishlist_update_7004(&$sandbox) {
  // Get all the roles which are granted permissions to view own wishlist and
  // re-save them to match the new permissions for managing the wishlist.
  $query = db_select('role_permission', 'rp')
    ->condition('rp.permission', 'view own wishlist');
  $query->leftJoin('role', 'r', 'rp.rid = r.rid');
  $query
    ->fields('rp')
    ->fields('r', array('name'));
  $permissions = $query
    ->execute()
    ->fetchAll();
  // Create a new array in which we will save the roles that have been affected
  // by the new permissions. This will be displayed to the administrators after
  // the update process has been completed.
  $affected_roles = array();
  foreach ($permissions as $permission) {
    // Sanity check: just in case the permission has already been granted to
    // this role, e.g. if the update.php has not been run previously and the
    // administrator already saved the permissions.
    $already_exists = db_select('role_permission', 'rp')
      ->fields('rp', array('rid'))
      ->condition('module', 'commerce_wishlist')
      ->condition('permission', 'manage own wishlist')
      ->condition('rid', $permission->rid)
      ->execute()
      ->fetchField();
    if (!$already_exists) {
      // Assign this role a new permission.
      db_insert('role_permission')
        ->fields(array(
          'rid'        => $permission->rid,
          'permission' => 'manage own wishlist',
          'module'     => 'commerce_wishlist',
        ))
        ->execute();
      // Add this role to the list of affected roles.
      $affected_roles[] = $permission->name;
    }
  }
  // Remove the old permissions as they are not necessary anymore.
  db_delete('role_permission')
    ->condition('permission', 'view own wishlist')
    ->execute();
  // Show a notification message to administrators so they know that users can
  // now see wishlists of other members.
  drupal_set_message(t('This release of Commerce Wishlistis supports public wishlists. By default all wishlists are made private and are visible only to their owners and administrators. If you want to make wishlists public, grant the "View active wishlists" permission to the appropriate role on the <a href="@link">permissions page</a>.', array('@link' => url('admin/people/permissions'))));
  drupal_set_message(t('If you have used the "View own wishlist" permission in a custom view or another place on the website, you will need to update it manually and use "Manage own wishlist" instead.'), 'warning');

  return t('Old permission "View own wishlist" has been replaced by the "Manage own wishlist" successfully. The following roles were affected: %roles.', array('%roles' => implode(', ', $affected_roles)));
}

/**
 * Implements hook_uninstall().
 */
function commerce_wishlist_uninstall() {
  // Removes the configuration
  variable_del('commerce_wishlist_element');
  variable_del('commerce_wishlist_product_types');
  variable_del('commerce_wishlist_weight');
}
